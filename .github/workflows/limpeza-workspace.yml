name: Limpeza Workspace

on:
  workflow_call:
    inputs:
      diretorio:
        required: true
        type: string
        description: "Diretório a ser limpo"
    secrets:
      MS_TEAMS_WEBHOOK_URI:
        required: true

jobs:
  limpeza_workspace:
    runs-on: [self-hosted]

    steps:
    - name: Limpeza Workspace
      id: limpeza_workspace
      run: |
        echo "Iniciando limpeza do workspace novo"
        echo "Diretório a ser limpo: ${{ inputs.diretorio }}"
        
        # Aguardar um pouco para garantir que os processos do workflow anterior tenham sido encerrados
        Start-Sleep -Seconds 30
        
        $diretorio = "${{ inputs.diretorio }}"
        
        # Verificar se o diretório existe
        if (-not (Test-Path $diretorio)) {
            Write-Host "O diretório do workspace não existe: $diretorio"
            exit 0
        }

        # Navegar para o diretório do workspace
        Set-Location -Path $diretorio
        Write-Host "Diretório atual: $(Get-Location)"

        # Limpar apenas os arquivos do projeto atual usando git, se .git existir
        if (Test-Path .git) {
            Write-Host "Executando limpeza git"
            git clean -fdx
        } else {
            Write-Host "Diretório .git não encontrado. Pulando comandos git."
        }
        
        # Continuar com a limpeza detalhada
        if (Test-Path $diretorio) {
          $arquivos = Get-ChildItem -Path $diretorio -Recurse
          $totalArquivos = $arquivos.Count
          $arquivosExcluidos = 0
          $arquivosComErro = @()

          foreach ($arquivo in $arquivos) {
            try {
              Remove-Item -Path $arquivo.FullName -Force -ErrorAction Stop
              $arquivosExcluidos++
              Write-Host "Arquivo excluído com sucesso: $($arquivo.FullName)"
            }
            catch {
              $arquivosComErro += $arquivo.FullName
              Write-Host "Erro ao excluir arquivo: $($arquivo.FullName). Erro: $_"
            }
          }

          Write-Host "Total de arquivos: $totalArquivos"
          Write-Host "Arquivos excluídos com sucesso: $arquivosExcluidos"
          Write-Host "Arquivos com erro de exclusão: $($arquivosComErro.Count)"

          if ($arquivosComErro.Count -gt 0) {
            Write-Host "Lista de arquivos que não puderam ser excluídos:"
            $arquivosComErro | ForEach-Object { Write-Host $_ }
            exit 1
          }
        }
        else {
          Write-Host "O diretório $diretorio não existe. Nada para limpar."
        }
      shell: pwsh
